#
#version: '3.7'
#
#
## Each service corresponds to a distinct container running within our Docker host:
## web for the Django local server, db for the PostgresSQL database
#
#services:
#  web:    # Can specify which service we want to use by docker-compose exec [service (e.g. web)] bash
#    build:
#      context: .
#      dockerfile: Dockerfile.dev
#    command: python /pgpubsub/manage.py runserver 0.0.0.0:8000
#    volumes: # automatically syncs Docker filesystem with out local one, meaning we don't need to rebuild when we change a file
#      - .:/pgpubsub
#    ports:
#      - 8000:8000
#    depends_on:
#      - db
#    env_file:
#      - ./.env.dev
#  db:
#    image: postgres:11
#    environment:
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_USER: postgres
#      POSTGRES_DB: postgres
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#
#volumes:
#  postgres_data:
#
#

version: "3.3"

services:
  db:
    image: postgres:13
    volumes:
      - ./.db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  app:
    # When first building, use opus10, then run tests using django-pgpubsub
    image: django-pgpubsub_app #opus10/circleci-public-django-app
    volumes:
      - ./:/django-pgpubsub:delegated
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    entrypoint: #''
      - "/django-pgpubsub/docker_entrypoint.sh"
    depends_on:
      - db
